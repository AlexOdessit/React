{"ast":null,"code":"import queryString from 'query-string';\nimport CONFIG from '../configs';\n\n// export async function getMovies(options = {}) {\n//   const defaultOptions = {\n//     page: 1,\n//     results: CONFIG.DEFAULT_AMOUNT,\n//     format: 'json',\n//     seed: CONFIG.API_KEY,\n//     inc: CONFIG.DEFAULT_USER_DATA,\n//   };\n\n//   const finalOptions = {\n//     ...defaultOptions,\n//     ...options,\n//   };\n\n//   // const { page, results, nat, seed, inc } = finalOptions;\n\n//   const query = queryString.stringify(finalOptions, { arrayFormat: 'comma' });\n\n//   const res = await fetch(`${CONFIG.BASE_URL}?${query}`);\n\n//   const { results: users } = await res.json();\n\n//   return users;\n// }\n\nexport async function getPosts() {\n  const res = await fetch('/posts.json');\n  return res.json();\n}","map":{"version":3,"names":["queryString","CONFIG","getPosts","res","fetch","json"],"sources":["/home/alex/Public/React/myslider/src/api/index.js"],"sourcesContent":["import queryString from 'query-string';\nimport CONFIG from '../configs';\n\n// export async function getMovies(options = {}) {\n//   const defaultOptions = {\n//     page: 1,\n//     results: CONFIG.DEFAULT_AMOUNT,\n//     format: 'json',\n//     seed: CONFIG.API_KEY,\n//     inc: CONFIG.DEFAULT_USER_DATA,\n//   };\n\n//   const finalOptions = {\n//     ...defaultOptions,\n//     ...options,\n//   };\n\n//   // const { page, results, nat, seed, inc } = finalOptions;\n\n//   const query = queryString.stringify(finalOptions, { arrayFormat: 'comma' });\n\n//   const res = await fetch(`${CONFIG.BASE_URL}?${query}`);\n\n//   const { results: users } = await res.json();\n\n//   return users;\n// }\n\nexport async function getPosts() {\n  const res = await fetch('/posts.json');\n\n  return res.json();\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,cAAc;AACtC,OAAOC,MAAM,MAAM,YAAY;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;EAEtC,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}