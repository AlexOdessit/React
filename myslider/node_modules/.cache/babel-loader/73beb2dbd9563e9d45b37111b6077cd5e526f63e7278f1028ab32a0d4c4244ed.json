{"ast":null,"code":"var _jsxFileName = \"/home/alex/Public/React/myslider/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { getMovies } from './api';\nimport DataLoader from './components/DataLoader';\nimport HeroCards from './components/HeroCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  const renderUsers = state => {\n    const {\n      data: movies,\n      isLoading,\n      isError\n    } = state;\n    return /*#__PURE__*/_jsxDEV(HeroCards, {\n      users: users,\n      isError: isError,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataLoader, {\n      loadData: getPosts,\n      children: renderPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","getMovies","DataLoader","HeroCards","jsxDEV","_jsxDEV","Fragment","_Fragment","App","props","renderUsers","state","data","movies","isLoading","isError","users","fileName","_jsxFileName","lineNumber","columnNumber","children","loadData","getPosts","renderPosts","_c","$RefreshReg$"],"sources":["/home/alex/Public/React/myslider/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { getMovies } from './api';\nimport DataLoader from './components/DataLoader';\nimport HeroCards from './components/HeroCards';\n\nfunction App(props) {\n  const renderUsers = (state) => {\n    const { data: movies, isLoading, isError } = state;\n    return <HeroCards users={users} isError={isError} isLoading={isLoading} />;\n  };\n\n  return (\n    <>\n      <DataLoader loadData={getPosts}>{renderPosts}</DataLoader>\n      {/* <DataLoader loadData={() => getUsers({ page: 1 })} abc={renderUsers} />\n      <DataLoader\n        loadData={() => fetch('/manifest.json').then((res) => res.json())}\n        abc={() => <p>this is render prop</p>}\n      /> */}\n      {/* <UserLoader /> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,GAAGA,CAACC,KAAK,EAAE;EAClB,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAM;MAAEC,IAAI,EAAEC,MAAM;MAAEC,SAAS;MAAEC;IAAQ,CAAC,GAAGJ,KAAK;IAClD,oBAAON,OAAA,CAACF,SAAS;MAACa,KAAK,EAAEA,KAAM;MAACD,OAAO,EAAEA,OAAQ;MAACD,SAAS,EAAEA;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5E,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACH,UAAU;MAACoB,QAAQ,EAAEC,QAAS;MAAAF,QAAA,EAAEG;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC,gBAO1D,CAAC;AAEP;AAACK,EAAA,GAjBQjB,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}