{"ast":null,"code":"var _jsxFileName = \"/home/alex/Public/React/myslider/src/components/Card/index.jsx\";\nimport React from 'react';\nimport styles from './Card/Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  state\n}) => {\n  if (!state) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.empty,\n      children: \"No cards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    products: cards,\n    isLoading,\n    isError\n  } = state;\n  console.log(state);\n  if (!cards) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.empty,\n      children: \"No cards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  const cardList = cards.map(card => /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.thumbnail,\n      alt: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, card.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.loading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.error,\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), cards.length === 0 && !isLoading && !isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.empty,\n      children: \"No cards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), cardList]\n  }, void 0, true);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","state","className","empty","children","fileName","_jsxFileName","lineNumber","columnNumber","products","cards","isLoading","isError","console","log","cardList","map","card","title","description","src","thumbnail","alt","id","loading","error","length","_c","$RefreshReg$"],"sources":["/home/alex/Public/React/myslider/src/components/Card/index.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './Card/Card.module.css';\n\nconst Card = ({ state }) => {\n  if (!state) {\n    return <p className={styles.empty}>No cards available.</p>;\n  }\n\n  const { products: cards, isLoading, isError } = state;\n  console.log(state);\n\n  if (!cards) {\n    return <p className={styles.empty}>No cards available.</p>;\n  }\n\n  const cardList = cards.map((card) => (\n    <article key={card.id} className='card'>\n      <h2>{card.title}</h2>\n      <p>{card.description}</p>\n      <img src={card.thumbnail} alt={card.title} />\n    </article>\n  ));\n\n  return (\n    <>\n      {isLoading && <h3 className={styles.loading}>Loading...</h3>}\n      {isError && <h3 className={styles.error}>Error...</h3>}\n      {cards.length === 0 && !isLoading && !isError && (\n        <p className={styles.empty}>No cards available.</p>\n      )}\n      {cardList}\n    </>\n  );\n};\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC1B,IAAI,CAACA,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAGK,SAAS,EAAEP,MAAM,CAACQ,KAAM;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5D;EAEA,MAAM;IAAEC,QAAQ,EAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGX,KAAK;EACrDY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EAElB,IAAI,CAACS,KAAK,EAAE;IACV,oBAAOb,OAAA;MAAGK,SAAS,EAAEP,MAAM,CAACQ,KAAM;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5D;EAEA,MAAMO,QAAQ,GAAGL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBAC9BpB,OAAA;IAAuBK,SAAS,EAAC,MAAM;IAAAE,QAAA,gBACrCP,OAAA;MAAAO,QAAA,EAAKa,IAAI,CAACC;IAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBX,OAAA;MAAAO,QAAA,EAAIa,IAAI,CAACE;IAAW;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBX,OAAA;MAAKuB,GAAG,EAAEH,IAAI,CAACI,SAAU;MAACC,GAAG,EAAEL,IAAI,CAACC;IAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GAHjCS,IAAI,CAACM,EAAE;IAAAlB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIZ,CACV,CAAC;EAEF,oBACEX,OAAA,CAAAE,SAAA;IAAAK,QAAA,GACGO,SAAS,iBAAId,OAAA;MAAIK,SAAS,EAAEP,MAAM,CAAC6B,OAAQ;MAAApB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3DI,OAAO,iBAAIf,OAAA;MAAIK,SAAS,EAAEP,MAAM,CAAC8B,KAAM;MAAArB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDE,KAAK,CAACgB,MAAM,KAAK,CAAC,IAAI,CAACf,SAAS,IAAI,CAACC,OAAO,iBAC3Cf,OAAA;MAAGK,SAAS,EAAEP,MAAM,CAACQ,KAAM;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD,EACAO,QAAQ;EAAA,eACT,CAAC;AAEP,CAAC;AAACY,EAAA,GA9BI3B,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}