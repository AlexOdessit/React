{"ast":null,"code":"var _jsxFileName = \"/home/alex/Public/React/myslider/src/components/Card/index.jsx\";\nimport React from 'react';\nimport styles from '../Card/Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = state => {\n  const {\n    products: data,\n    isLoading,\n    isError\n  } = state;\n  console.log(data);\n\n  // if (!cards) {\n  //   return <p className={styles.empty}>No cards available.</p>;\n  // }\n\n  const cardList = cards.map(card => /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.thumbnail,\n      alt: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, card.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.loading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.error,\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), cards.length === 0 && !isLoading && !isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.empty,\n      children: \"No cards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), cardList]\n  }, void 0, true);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","state","products","data","isLoading","isError","console","log","cardList","cards","map","card","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","src","thumbnail","alt","id","loading","error","length","empty","_c","$RefreshReg$"],"sources":["/home/alex/Public/React/myslider/src/components/Card/index.jsx"],"sourcesContent":["import React from 'react';\nimport styles from '../Card/Card.module.css';\n\nconst Card = (state) => {\n  const { products: data, isLoading, isError } = state;\n  console.log(data);\n\n  // if (!cards) {\n  //   return <p className={styles.empty}>No cards available.</p>;\n  // }\n\n  const cardList = cards.map((card) => (\n    <article key={card.id} className='card'>\n      <h2>{card.title}</h2>\n      <p>{card.description}</p>\n      <img src={card.thumbnail} alt={card.title} />\n    </article>\n  ));\n\n  return (\n    <>\n      {isLoading && <h3 className={styles.loading}>Loading...</h3>}\n      {isError && <h3 className={styles.error}>Error...</h3>}\n      {cards.length === 0 && !isLoading && !isError && (\n        <p className={styles.empty}>No cards available.</p>\n      )}\n      {cardList}\n    </>\n  );\n};\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAM;IAAEC,QAAQ,EAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EACpDK,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;;EAEjB;EACA;EACA;;EAEA,MAAMK,QAAQ,GAAGC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAC9Bd,OAAA;IAAuBe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrChB,OAAA;MAAAgB,QAAA,EAAKF,IAAI,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBrB,OAAA;MAAAgB,QAAA,EAAIF,IAAI,CAACQ;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAKuB,GAAG,EAAET,IAAI,CAACU,SAAU;MAACC,GAAG,EAAEX,IAAI,CAACG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GAHjCP,IAAI,CAACY,EAAE;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIZ,CACV,CAAC;EAEF,oBACErB,OAAA,CAAAE,SAAA;IAAAc,QAAA,GACGT,SAAS,iBAAIP,OAAA;MAAIe,SAAS,EAAEjB,MAAM,CAAC6B,OAAQ;MAAAX,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3Db,OAAO,iBAAIR,OAAA;MAAIe,SAAS,EAAEjB,MAAM,CAAC8B,KAAM;MAAAZ,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDT,KAAK,CAACiB,MAAM,KAAK,CAAC,IAAI,CAACtB,SAAS,IAAI,CAACC,OAAO,iBAC3CR,OAAA;MAAGe,SAAS,EAAEjB,MAAM,CAACgC,KAAM;MAAAd,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD,EACAV,QAAQ;EAAA,eACT,CAAC;AAEP,CAAC;AAACoB,EAAA,GA1BI5B,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}