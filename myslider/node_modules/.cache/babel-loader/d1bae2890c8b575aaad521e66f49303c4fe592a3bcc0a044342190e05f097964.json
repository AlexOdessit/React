{"ast":null,"code":"var _jsxFileName = \"/home/alex/Public/React/myslider/src/components/Card/index.jsx\";\nimport React from 'react';\nimport styles from '../Card/Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = state => {\n  const {\n    data: product,\n    isLoading,\n    isError\n  } = state;\n  console.log(product);\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.empty,\n      children: \"No products available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.loading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.error,\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.desc,\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.thumbnail,\n        alt: product.title,\n        className: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","state","data","product","isLoading","isError","console","log","className","empty","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","error","card","content","title","desc","description","src","thumbnail","alt","img","id","_c","$RefreshReg$"],"sources":["/home/alex/Public/React/myslider/src/components/Card/index.jsx"],"sourcesContent":["import React from 'react';\nimport styles from '../Card/Card.module.css';\n\nconst Card = (state) => {\n  const { data: product, isLoading, isError } = state;\n  console.log(product);\n\n  if (!product) {\n    return <p className={styles.empty}>No products available.</p>;\n  }\n  return (\n    <>\n      {isLoading && <h3 className={styles.loading}>Loading...</h3>}\n      {isError && <h3 className={styles.error}>Error...</h3>}\n      <article key={product.id} className={styles.card}>\n        <div className={styles.content}>\n          <h2 className={styles.title}>{product.title}</h2>\n          <p className={styles.desc}>{product.description}</p>\n        </div>\n        <img\n          src={product.thumbnail}\n          alt={product.title}\n          className={styles.img}\n        />\n      </article>\n    </>\n  );\n};\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAM;IAAEC,IAAI,EAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EACnDK,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EAEpB,IAAI,CAACA,OAAO,EAAE;IACZ,oBAAON,OAAA;MAAGW,SAAS,EAAEb,MAAM,CAACc,KAAM;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/D;EACA,oBACEjB,OAAA,CAAAE,SAAA;IAAAW,QAAA,GACGN,SAAS,iBAAIP,OAAA;MAAIW,SAAS,EAAEb,MAAM,CAACoB,OAAQ;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3DT,OAAO,iBAAIR,OAAA;MAAIW,SAAS,EAAEb,MAAM,CAACqB,KAAM;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDjB,OAAA;MAA0BW,SAAS,EAAEb,MAAM,CAACsB,IAAK;MAAAP,QAAA,gBAC/Cb,OAAA;QAAKW,SAAS,EAAEb,MAAM,CAACuB,OAAQ;QAAAR,QAAA,gBAC7Bb,OAAA;UAAIW,SAAS,EAAEb,MAAM,CAACwB,KAAM;UAAAT,QAAA,EAAEP,OAAO,CAACgB;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjDjB,OAAA;UAAGW,SAAS,EAAEb,MAAM,CAACyB,IAAK;UAAAV,QAAA,EAAEP,OAAO,CAACkB;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACNjB,OAAA;QACEyB,GAAG,EAAEnB,OAAO,CAACoB,SAAU;QACvBC,GAAG,EAAErB,OAAO,CAACgB,KAAM;QACnBX,SAAS,EAAEb,MAAM,CAAC8B;MAAI;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA,GATUX,OAAO,CAACuB,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUf,CAAC;EAAA,eACV,CAAC;AAEP,CAAC;AAACa,EAAA,GAxBI3B,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}