{"ast":null,"code":"var _jsxFileName = \"/home/alex/Public/React/myslider/src/components/Cards/index.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = ({\n  products: cards,\n  isLoading,\n  isError\n}) => {\n  if (!cards) {\n    return isError; // or render a loading state or an error message\n  }\n\n  // console.log(cards, isLoading, isError);\n  const cardList = cards.map(card => /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.thumbnail,\n      alt: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, card.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this), cards.length === 0 && !isLoading && !isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), cardList]\n  }, void 0, true);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","products","cards","isLoading","isError","cardList","map","card","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","src","thumbnail","alt","id","length","_c","$RefreshReg$"],"sources":["/home/alex/Public/React/myslider/src/components/Cards/index.jsx"],"sourcesContent":["import React from 'react';\n\nconst Cards = ({ products: cards, isLoading, isError }) => {\n  if (!cards) {\n    return isError; // or render a loading state or an error message\n  }\n\n  // console.log(cards, isLoading, isError);\n  const cardList = cards.map((card) => (\n    <article key={card.id} className='card'>\n      <h2>{card.title}</h2>\n      <p>{card.description}</p>\n      <img src={card.thumbnail} alt={card.title} />\n    </article>\n  ));\n  return (\n    <>\n      {isLoading && <h3>Loading...</h3>}\n      {isError && <h3>Error...</h3>}\n      {cards.length === 0 && !isLoading && !isError && (\n        <p>No cards available.</p>\n      )}\n      {cardList}\n    </>\n  );\n};\n\nexport default Cards;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,QAAQ,EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EACzD,IAAI,CAACF,KAAK,EAAE;IACV,OAAOE,OAAO,CAAC,CAAC;EAClB;;EAEA;EACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAG,CAAEC,IAAI,iBAC9BV,OAAA;IAAuBW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrCZ,OAAA;MAAAY,QAAA,EAAKF,IAAI,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBjB,OAAA;MAAAY,QAAA,EAAIF,IAAI,CAACQ;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAKmB,GAAG,EAAET,IAAI,CAACU,SAAU;MAACC,GAAG,EAAEX,IAAI,CAACG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GAHjCP,IAAI,CAACY,EAAE;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIZ,CACV,CAAC;EACF,oBACEjB,OAAA,CAAAE,SAAA;IAAAU,QAAA,GACGN,SAAS,iBAAIN,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCV,OAAO,iBAAIP,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BZ,KAAK,CAACkB,MAAM,KAAK,CAAC,IAAI,CAACjB,SAAS,IAAI,CAACC,OAAO,iBAC3CP,OAAA;MAAAY,QAAA,EAAG;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B,EACAT,QAAQ;EAAA,eACT,CAAC;AAEP,CAAC;AAACgB,EAAA,GAvBIrB,KAAK;AAyBX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}